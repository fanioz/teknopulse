---
export interface Props {
  title: string;
  description?: string;
  image?: string;
}

const { title, description = "TeknoPulse - Membangun masa depan dengan AI dan otomasi", image = "/og-image.jpg" } = Astro.props;
---

<!DOCTYPE html>
<html lang="id">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- Theme color for mobile browsers (will be updated by theme toggle) -->
    <meta name="theme-color" content="#ffffff" />
    
    <!-- SEO Meta Tags -->
    <title>{title}</title>
    <meta name="description" content={description} />
    
    <!-- Open Graph -->
    <meta property="og:type" content="website" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={image} />
    <meta property="og:url" content={Astro.url} />
    
    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={image} />
    
    <link rel="stylesheet" href="/src/styles/global.css" />
    
    <!-- Prevent flash of unstyled content -->
    <script>
      (function() {
        const theme = localStorage.getItem('theme') || 
          (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
        
        document.documentElement.setAttribute('data-theme', theme);
        document.documentElement.classList.add(theme);
        
        // Set initial theme color
        const themeColor = theme === 'dark' ? '#0f172a' : '#ffffff';
        document.querySelector('meta[name="theme-color"]')?.setAttribute('content', themeColor);
      })();
    </script>
  </head>
  <body>
    <slot />
  </body>
</html>